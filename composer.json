{
    "name": "project-name/project-name",
    "description": "project-name",
    "keywords": [],
    "license": "proprietary",
    "type": "project",
    "require": {
        "php": "^7.2",
        "fideloper/proxy": "^4.0",
        "laravel/framework": "^6.2",
        "laravel/tinker": "^2.0",
        "laravel-doctrine/orm": "^1.5",
        "laravel-doctrine/fluent": "^1.1",
        "laravel-doctrine/extensions": "^1.0",
        "gedmo/doctrine-extensions": "^2.4",
        "beberlei/DoctrineExtensions": "^1.0",
        "digbang/doctrine-extensions": "^1.0",
        "digbang/backoffice": "^6.1",
        "laravelcollective/html": "^6.0",
        "beberlei/assert": "^2.6",
        "cakephp/chronos": "^1.1",
        "sentry/sentry": "^1.6",
        "sentry/sentry-laravel": "^0.9"
    },
    "require-dev": {
        "barryvdh/laravel-ide-helper": "^2.4",
        "beyondcode/laravel-dump-server": "^1.0",
        "facade/ignition": "^1.4",
        "fzaninotto/faker": "^1.4",
        "mockery/mockery": "^1.0",
        "nunomaduro/collision": "^3.0",
        "phpunit/phpunit": "^8.0",
        "friendsofphp/php-cs-fixer": "^2.9.3",
        "garygreen/pretty-routes": "^1.0",
        "arcanedev/log-viewer": "^5.0",
        "brainmaestro/composer-git-hooks": "^2.4",
        "symfony/thanks": "^1.0"
    },
    "suggest": {
        "intervention/image":        "PHP image handling and manipulation library.",
        "cviebrock/image-validator": "Extra Laravel validation rules for dealing with images.",
        "dingo/api":                 "API development.",
        "omnipay/omnipay":           "Payment gateway abstraction.",
        "digbang/settings": "Dynamic settings, stored in the database. Settings the backoffice admin can alter",
        "digbang/money": "Money PHP bridge for Laravel",
        "moneyphp/money":            "Work with money safer, easier, and fun!",
        "beberlei/assert": "^2.6"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "ProjectName\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "extra": {
        "laravel": {
            "dont-discover": [
            ]
        },
        "hooks": {
            "pre-commit": "docker run --rm -t -v $(pwd -W &> /dev/null && pwd -W || pwd):/code php bash -c \"cd /code; vendor/bin/phpunit\"",
            "post-commit": "docker run --rm -t -v $(pwd -W &> /dev/null && pwd -W || pwd):/code php bash -c \"cd /code; vendor/bin/php-cs-fixer fix --allow-risky=yes\""
        }
    },
    "scripts": {
        "post-root-package-install": [
            "bash -c 'sed -i \"s/project-name/${PWD##*/}/g\" .env.example docker-compose.yml sonar-project.properties docker/postgres/Dockerfile'",
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "php composer/replace_namespaces.php",
            "bash -c 'rm -rf composer'"
        ],
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-install-cmd": [
            "bash -c 'vendor/bin/cghooks add --ignore-lock --force-win'"
        ],
        "post-update-cmd": [
            "bash -c 'vendor/bin/cghooks update --force-win'"
        ],
        "build": [
            "php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
            "php artisan key:generate",
            "php artisan clear-compiled",
            "php artisan vendor:publish --tag=\"assets\"",
            "php artisan doctrine:clear:metadata:cache",
            "php artisan doctrine:generate:proxies",
            "php artisan doctrine:schema:update --force"
        ]
    },
    "config": {
        "preferred-install": "dist",
        "sort-packages": true,
        "optimize-autoloader": true
    },
    "repositories" : [
        { "url": "git@github.com:digbang/backoffice.git", "type": "vcs" }
    ],
    "minimum-stability": "dev",
    "prefer-stable": true
}
